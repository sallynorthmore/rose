/*! modernizr 3.3.1 (Custom Build) | MIT *
 * https://modernizr.com/download/?-bgsizecover-csspseudotransitions-csstransforms-csstransforms3d-csstransitions-cssvhunit-cssvmaxunit-flexbox-flexboxlegacy-flexwrap-inlinesvg-preserve3d-svg-touchevents-video-videoautoplay-prefixed-prefixedcss-prefixedcssvalue-setclasses !*/
!function (A, e, t) {
  function n(A, e) {
    return typeof A === e;
  }function o() {
    var A, e, t, o, r, i, s;for (var a in R) if (R.hasOwnProperty(a)) {
      if (A = [], e = R[a], e.name && (A.push(e.name.toLowerCase()), e.options && e.options.aliases && e.options.aliases.length)) for (t = 0; t < e.options.aliases.length; t++) A.push(e.options.aliases[t].toLowerCase());for (o = n(e.fn, "function") ? e.fn() : e.fn, r = 0; r < A.length; r++) i = A[r], s = i.split("."), 1 === s.length ? Modernizr[s[0]] = o : (!Modernizr[s[0]] || Modernizr[s[0]] instanceof Boolean || (Modernizr[s[0]] = new Boolean(Modernizr[s[0]])), Modernizr[s[0]][s[1]] = o), y.push((o ? "" : "no-") + s.join("-"));
    }
  }function r(A) {
    var e = E.className,
        t = Modernizr._config.classPrefix || "";if (x && (e = e.baseVal), Modernizr._config.enableJSClass) {
      var n = new RegExp("(^|\\s)" + t + "no-js(\\s|$)");e = e.replace(n, "$1" + t + "js$2");
    }Modernizr._config.enableClasses && (e += " " + t + A.join(" " + t), x ? E.className.baseVal = e : E.className = e);
  }function i(A) {
    return A.replace(/([a-z])-([a-z])/g, function (A, e, t) {
      return e + t.toUpperCase();
    }).replace(/^-/, "");
  }function s(A) {
    return A.replace(/([A-Z])/g, function (A, e) {
      return "-" + e.toLowerCase();
    }).replace(/^ms-/, "-ms-");
  }function a() {
    return "function" != typeof e.createElement ? e.createElement(arguments[0]) : x ? e.createElementNS.call(e, "http://www.w3.org/2000/svg", arguments[0]) : e.createElement.apply(e, arguments);
  }function l(A, e) {
    return A - 1 === e || A === e || A + 1 === e;
  }function d(A, e) {
    if ("object" == typeof A) for (var t in A) F(A, t) && d(t, A[t]);else {
      A = A.toLowerCase();var n = A.split("."),
          o = Modernizr[n[0]];if (2 == n.length && (o = o[n[1]]), "undefined" != typeof o) return Modernizr;e = "function" == typeof e ? e() : e, 1 == n.length ? Modernizr[n[0]] = e : (!Modernizr[n[0]] || Modernizr[n[0]] instanceof Boolean || (Modernizr[n[0]] = new Boolean(Modernizr[n[0]])), Modernizr[n[0]][n[1]] = e), r([(e && 0 != e ? "" : "no-") + n.join("-")]), Modernizr._trigger(A, e);
    }return Modernizr;
  }function c(A, e) {
    return !!~("" + A).indexOf(e);
  }function u(A, e) {
    return function () {
      return A.apply(e, arguments);
    };
  }function p(A, e, t) {
    var o;for (var r in A) if (A[r] in e) return t === !1 ? A[r] : (o = e[A[r]], n(o, "function") ? u(o, t || e) : o);return !1;
  }function f() {
    var A = e.body;return A || (A = a(x ? "svg" : "body"), A.fake = !0), A;
  }function h(A, t, n, o) {
    var r,
        i,
        s,
        l,
        d = "modernizr",
        c = a("div"),
        u = f();if (parseInt(n, 10)) for (; n--;) s = a("div"), s.id = o ? o[n] : d + (n + 1), c.appendChild(s);return r = a("style"), r.type = "text/css", r.id = "s" + d, (u.fake ? u : c).appendChild(r), u.appendChild(c), r.styleSheet ? r.styleSheet.cssText = A : r.appendChild(e.createTextNode(A)), c.id = d, u.fake && (u.style.background = "", u.style.overflow = "hidden", l = E.style.overflow, E.style.overflow = "hidden", E.appendChild(u)), i = t(c, A), u.fake ? (u.parentNode.removeChild(u), E.style.overflow = l, E.offsetHeight) : c.parentNode.removeChild(c), !!i;
  }function g(e, n) {
    var o = e.length;if ("CSS" in A && "supports" in A.CSS) {
      for (; o--;) if (A.CSS.supports(s(e[o]), n)) return !0;return !1;
    }if ("CSSSupportsRule" in A) {
      for (var r = []; o--;) r.push("(" + s(e[o]) + ":" + n + ")");return r = r.join(" or "), h("@supports (" + r + ") { #modernizr { position: absolute; } }", function (A) {
        return "absolute" == getComputedStyle(A, null).position;
      });
    }return t;
  }function m(A, e, o, r) {
    function s() {
      d && (delete P.style, delete P.modElem);
    }if (r = n(r, "undefined") ? !1 : r, !n(o, "undefined")) {
      var l = g(A, o);if (!n(l, "undefined")) return l;
    }for (var d, u, p, f, h, m = ["modernizr", "tspan", "samp"]; !P.style && m.length;) d = !0, P.modElem = a(m.shift()), P.style = P.modElem.style;for (p = A.length, u = 0; p > u; u++) if (f = A[u], h = P.style[f], c(f, "-") && (f = i(f)), P.style[f] !== t) {
      if (r || n(o, "undefined")) return s(), "pfx" == e ? f : !0;try {
        P.style[f] = o;
      } catch (v) {}if (P.style[f] != h) return s(), "pfx" == e ? f : !0;
    }return s(), !1;
  }function v(A, e, t, o, r) {
    var i = A.charAt(0).toUpperCase() + A.slice(1),
        s = (A + " " + b.join(i + " ") + i).split(" ");return n(e, "string") || n(e, "undefined") ? m(s, e, o, r) : (s = (A + " " + Z.join(i + " ") + i).split(" "), p(s, e, t));
  }function w(A, e, n) {
    return v(A, t, t, e, n);
  }var y = [],
      R = [],
      T = { _version: "3.3.1", _config: { classPrefix: "", enableClasses: !0, enableJSClass: !0, usePrefixes: !0 }, _q: [], on: function (A, e) {
      var t = this;setTimeout(function () {
        e(t[A]);
      }, 0);
    }, addTest: function (A, e, t) {
      R.push({ name: A, fn: e, options: t });
    }, addAsyncTest: function (A) {
      R.push({ name: null, fn: A });
    } },
      Modernizr = function () {};Modernizr.prototype = T, Modernizr = new Modernizr(), Modernizr.addTest("svg", !!e.createElementNS && !!e.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect);var E = e.documentElement,
      x = "svg" === E.nodeName.toLowerCase(),
      C = T._config.usePrefixes ? " -webkit- -moz- -o- -ms- ".split(" ") : ["", ""];T._prefixes = C, Modernizr.addTest("video", function () {
    var A = a("video"),
        e = !1;try {
      (e = !!A.canPlayType) && (e = new Boolean(e), e.ogg = A.canPlayType('video/ogg; codecs="theora"').replace(/^no$/, ""), e.h264 = A.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/, ""), e.webm = A.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/, ""), e.vp9 = A.canPlayType('video/webm; codecs="vp9"').replace(/^no$/, ""), e.hls = A.canPlayType('application/x-mpegURL; codecs="avc1.42E01E"').replace(/^no$/, ""));
    } catch (t) {}return e;
  }), Modernizr.addTest("preserve3d", function () {
    var A = a("a"),
        e = a("a");A.style.cssText = "display: block; transform-style: preserve-3d; transform-origin: right; transform: rotateY(40deg);", e.style.cssText = "display: block; width: 9px; height: 1px; background: #000; transform-origin: right; transform: rotateY(40deg);", A.appendChild(e), E.appendChild(A);var t = e.getBoundingClientRect();return E.removeChild(A), t.width && t.width < 4;
  }), Modernizr.addTest("inlinesvg", function () {
    var A = a("div");return A.innerHTML = "<svg/>", "http://www.w3.org/2000/svg" == ("undefined" != typeof SVGRect && A.firstChild && A.firstChild.namespaceURI);
  });var B = "CSS" in A && "supports" in A.CSS,
      G = "supportsCSS" in A;Modernizr.addTest("supports", B || G);var F;!function () {
    var A = {}.hasOwnProperty;F = n(A, "undefined") || n(A.call, "undefined") ? function (A, e) {
      return e in A && n(A.constructor.prototype[e], "undefined");
    } : function (e, t) {
      return A.call(e, t);
    };
  }(), T._l = {}, T.on = function (A, e) {
    this._l[A] || (this._l[A] = []), this._l[A].push(e), Modernizr.hasOwnProperty(A) && setTimeout(function () {
      Modernizr._trigger(A, Modernizr[A]);
    }, 0);
  }, T._trigger = function (A, e) {
    if (this._l[A]) {
      var t = this._l[A];setTimeout(function () {
        var A, n;for (A = 0; A < t.length; A++) (n = t[A])(e);
      }, 0), delete this._l[A];
    }
  }, Modernizr._q.push(function () {
    T.addTest = d;
  }), Modernizr.addAsyncTest(function () {
    function A(i) {
      o++, clearTimeout(e);var s = i && "playing" === i.type || 0 !== r.currentTime;return !s && n > o ? void (e = setTimeout(A, t)) : (r.removeEventListener("playing", A, !1), d("videoautoplay", s), void r.parentNode.removeChild(r));
    }var e,
        t = 200,
        n = 5,
        o = 0,
        r = a("video"),
        i = r.style;if (!(Modernizr.video && "autoplay" in r)) return void d("videoautoplay", !1);i.position = "absolute", i.height = 0, i.width = 0;try {
      if (Modernizr.video.ogg) r.src = "data:video/ogg;base64,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";else {
        if (!Modernizr.video.h264) return void d("videoautoplay", !1);r.src = "data:video/mp4;base64,AAAAIGZ0eXBpc29tAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAAAs1tZGF0AAACrgYF//+q3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE0OCByMjYwMSBhMGNkN2QzIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNSAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTMgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MzoweDExMyBtZT1oZXggc3VibWU9NyBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0xIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MSA4eDhkY3Q9MSBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0tMiB0aHJlYWRzPTEgbG9va2FoZWFkX3RocmVhZHM9MSBzbGljZWRfdGhyZWFkcz0wIG5yPTAgZGVjaW1hdGU9MSBpbnRlcmxhY2VkPTAgYmx1cmF5X2NvbXBhdD0wIGNvbnN0cmFpbmVkX2ludHJhPTAgYmZyYW1lcz0zIGJfcHlyYW1pZD0yIGJfYWRhcHQ9MSBiX2JpYXM9MCBkaXJlY3Q9MSB3ZWlnaHRiPTEgb3Blbl9nb3A9MCB3ZWlnaHRwPTIga2V5aW50PTI1MCBrZXlpbnRfbWluPTEwIHNjZW5lY3V0PTQwIGludHJhX3JlZnJlc2g9MCByY19sb29rYWhlYWQ9NDAgcmM9Y3JmIG1idHJlZT0xIGNyZj0yMy4wIHFjb21wPTAuNjAgcXBtaW49MCBxcG1heD02OSBxcHN0ZXA9NCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAD2WIhAA3//728P4FNjuZQQAAAu5tb292AAAAbG12aGQAAAAAAAAAAAAAAAAAAAPoAAAAZAABAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACGHRyYWsAAABcdGtoZAAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAZAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAgAAAAIAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAAGQAAAAAAAEAAAAAAZBtZGlhAAAAIG1kaGQAAAAAAAAAAAAAAAAAACgAAAAEAFXEAAAAAAAtaGRscgAAAAAAAAAAdmlkZQAAAAAAAAAAAAAAAFZpZGVvSGFuZGxlcgAAAAE7bWluZgAAABR2bWhkAAAAAQAAAAAAAAAAAAAAJGRpbmYAAAAcZHJlZgAAAAAAAAABAAAADHVybCAAAAABAAAA+3N0YmwAAACXc3RzZAAAAAAAAAABAAAAh2F2YzEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAgACAEgAAABIAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY//8AAAAxYXZjQwFkAAr/4QAYZ2QACqzZX4iIhAAAAwAEAAADAFA8SJZYAQAGaOvjyyLAAAAAGHN0dHMAAAAAAAAAAQAAAAEAAAQAAAAAHHN0c2MAAAAAAAAAAQAAAAEAAAABAAAAAQAAABRzdHN6AAAAAAAAAsUAAAABAAAAFHN0Y28AAAAAAAAAAQAAADAAAABidWR0YQAAAFptZXRhAAAAAAAAACFoZGxyAAAAAAAAAABtZGlyYXBwbAAAAAAAAAAAAAAAAC1pbHN0AAAAJal0b28AAAAdZGF0YQAAAAEAAAAATGF2ZjU2LjQwLjEwMQ==";
      }
    } catch (s) {
      return void d("videoautoplay", !1);
    }r.setAttribute("autoplay", ""), r.style.cssText = "display:none", E.appendChild(r), setTimeout(function () {
      r.addEventListener("playing", A, !1), e = setTimeout(A, t);
    }, 0);
  });var S = "Moz O ms Webkit",
      b = T._config.usePrefixes ? S.split(" ") : [];T._cssomPrefixes = b;var Q = function (e) {
    var n,
        o = C.length,
        r = A.CSSRule;if ("undefined" == typeof r) return t;if (!e) return !1;if (e = e.replace(/^@/, ""), n = e.replace(/-/g, "_").toUpperCase() + "_RULE", n in r) return "@" + e;for (var i = 0; o > i; i++) {
      var s = C[i],
          a = s.toUpperCase() + "_" + n;if (a in r) return "@-" + s.toLowerCase() + "-" + e;
    }return !1;
  };T.atRule = Q;var Z = T._config.usePrefixes ? S.toLowerCase().split(" ") : [];T._domPrefixes = Z;var Y = T.testStyles = h;Modernizr.addTest("touchevents", function () {
    var t;if ("ontouchstart" in A || A.DocumentTouch && e instanceof DocumentTouch) t = !0;else {
      var n = ["@media (", C.join("touch-enabled),("), "heartz", ")", "{#modernizr{top:9px;position:absolute}}"].join("");Y(n, function (A) {
        t = 9 === A.offsetTop;
      });
    }return t;
  }), Y("#modernizr { height: 50vh; }", function (e) {
    var t = parseInt(A.innerHeight / 2, 10),
        n = parseInt((A.getComputedStyle ? getComputedStyle(e, null) : e.currentStyle).height, 10);Modernizr.addTest("cssvhunit", n == t);
  }), Y("#modernizr1{width: 50vmax}#modernizr2{width:50px;height:50px;overflow:scroll}#modernizr3{position:fixed;top:0;left:0;bottom:0;right:0}", function (e) {
    var t = e.childNodes[2],
        n = e.childNodes[1],
        o = e.childNodes[0],
        r = parseInt((n.offsetWidth - n.clientWidth) / 2, 10),
        i = o.clientWidth / 100,
        s = o.clientHeight / 100,
        a = parseInt(50 * Math.max(i, s), 10),
        d = parseInt((A.getComputedStyle ? getComputedStyle(t, null) : t.currentStyle).width, 10);Modernizr.addTest("cssvmaxunit", l(a, d) || l(a, d - r));
  }, 3);var V = { elem: a("modernizr") };Modernizr._q.push(function () {
    delete V.elem;
  });var P = { style: V.elem.style };Modernizr._q.unshift(function () {
    delete P.style;
  }), T.testAllProps = v;var M = T.prefixed = function (A, e, t) {
    return 0 === A.indexOf("@") ? Q(A) : (-1 != A.indexOf("-") && (A = i(A)), e ? v(A, e, t) : v(A, "pfx"));
  };T.prefixedCSS = function (A) {
    var e = M(A);return e && s(e);
  };T.testAllProps = w, Modernizr.addTest("bgsizecover", w("backgroundSize", "cover")), Modernizr.addTest("flexbox", w("flexBasis", "1px", !0)), Modernizr.addTest("flexboxlegacy", w("boxDirection", "reverse", !0)), Modernizr.addTest("flexwrap", w("flexWrap", "wrap", !0)), Modernizr.addTest("csstransforms", function () {
    return -1 === navigator.userAgent.indexOf("Android 2.") && w("transform", "scale(1)", !0);
  }), Modernizr.addTest("csstransforms3d", function () {
    var A = !!w("perspective", "1px", !0),
        e = Modernizr._config.usePrefixes;if (A && (!e || "webkitPerspective" in E.style)) {
      var t,
          n = "#modernizr{width:0;height:0}";Modernizr.supports ? t = "@supports (perspective: 1px)" : (t = "@media (transform-3d)", e && (t += ",(-webkit-transform-3d)")), t += "{#modernizr{width:7px;height:18px;margin:0;padding:0;border:0}}", Y(n + t, function (e) {
        A = 7 === e.offsetWidth && 18 === e.offsetHeight;
      });
    }return A;
  }), Modernizr.addTest("csstransitions", w("transition", "all", !0)), Modernizr.addTest("csspseudotransitions", function () {
    var e = !1;if (!Modernizr.csstransitions || !A.getComputedStyle) return e;var t = '#modernizr:before { content:" "; font-size:5px;' + Modernizr._prefixes.join("transition:0s 100s;") + "}#modernizr.trigger:before { font-size:10px; }";return Modernizr.testStyles(t, function (t) {
      A.getComputedStyle(t, ":before").getPropertyValue("font-size"), t.className += "trigger", e = "5px" === A.getComputedStyle(t, ":before").getPropertyValue("font-size");
    }), e;
  });var U = function (A, e) {
    var t = !1,
        n = a("div"),
        o = n.style;if (A in o) {
      var r = Z.length;for (o[A] = e, t = o[A]; r-- && !t;) o[A] = "-" + Z[r] + "-" + e, t = o[A];
    }return "" === t && (t = !1), t;
  };T.prefixedCSSValue = U, o(), r(y), delete T.addTest, delete T.addAsyncTest;for (var I = 0; I < Modernizr._q.length; I++) Modernizr._q[I]();A.Modernizr = Modernizr;
}(window, document);
//# sourceMappingURL=data:application/json;base64,